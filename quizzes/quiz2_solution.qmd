f---
title: "STAT662 Quiz 2"
author: 
format: pdf
---

c) Implement the approach in b) for d = 3 and perform suitable tests to confirm that your implementation produces the desired result.

```{r}

# Calculate matrix root of covariance matrix
covRoot <- function(sigma){
    r <- eigen(sigma)
    v <- r$vectors
    lam <- r$values
    rt <- v%*%diag(sqrt(lam))

    return(rt)
}

# Perform random number generation from 

multiVarNorm <- function(mu, sigma, d, n){
  ###
  # Method to generate random numbers from the multivariate
  # normal distribution
  # params:
  # d (numeric) - dimension of multivariate normal distribution
  # mu (vector) - mean of multivariate normal distribution
  # should be a vector of length d
  # sigma (matrix) - covariance of multivariate normal distribution
  # should be a matrix of dimension dxd
  # n (numeric) - number of random generations
  # returns: matrix of random numbers
  ###
  
  # Calculate matrix root of covariance matrix
  rt <- covRoot(sigma)
    
  # Perform random number generation from standard normal
  dRandNorm <- matrix(rnorm(d*n), nrow=d)
  
  # transform standard normal random numbers to multivariate
  # normal distribution
  x <- rt%*%dRandNorm + mu
    
  
  return(t(x))
  
}


```

We will now test the generated data with n=50
```{r}
library(energy)
# We will initially test using the energy package which 
# tests the null package that the data fits a multivariate 
# normal distribution

# Create sigmas to test
rho = 0.2
sigma_test <- matrix(c(1, rho, rho, rho, 1, rho, rho, rho, 1), nrow=3, ncol=3)

mn <- multiVarNorm(c(0, 0, 0), sigma_test, 3, 50)
mvnorm.etest(mn, 100)
```
We see the p-value is high so we fail to reject the null hypothesis 
that the data is multivariate normal.
```{r}
# We will also test each column of our output is approximately
# normal and has expected mean and covariances 

# dimension 1
qqnorm(mn[,1])
mean(mn[,1])

# dimension 1
qqnorm(mn[,2])
mean(mn[,2])

# dimension 1
qqnorm(mn[,3])
mean(mn[,3])

# covariances
cov(mn)


```

We will now test the generated data with n=1000
```{r}
library(energy)
# We will initially test using the energy package which 
# tests the null package that the data fits a multivariate 
# normal distribution

# Create sigmas to test
rho = 0.2
sigma_test <- matrix(c(1, rho, rho, rho, 1, rho, rho, rho, 1), nrow=3, ncol=3)

mn <- multiVarNorm(c(0, 0, 0), sigma_test, 3, 1000)
mvnorm.etest(mn, 100)
```
We see the p-value is high so we fail to reject the null hypothesis 
that the data is multivariate normal.
```{r}
# We will also test each column of our output is approximately
# normal and has expected mean and covariances 

# dimension 1
qqnorm(mn[,1])
mean(mn[,1])

# dimension 1
qqnorm(mn[,2])
mean(mn[,2])

# dimension 1
qqnorm(mn[,3])
mean(mn[,3])

# covariances
cov(mn)


```
